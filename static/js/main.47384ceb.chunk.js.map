{"version":3,"sources":["services/UserServices.js","containers/UserInformation/style.js","containers/UserDetails/UserDetails.js","containers/UserInformation/UserInformation.js","common/components/Loading/Loading.js","common/components/NoDataAvailable/NoDataAvailable.js","common/components/ErrorPage/ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["UserService","getUsers","fetch","BASE_URL","method","mode","cache","credentials","headers","referrerPolicy","then","response","contentType","get","includes","TypeError","json","UserInformationContainer","styled","div","UserDetails","props","user","index","onClick","e","target","nodeName","toggleExpander","handleRowExpansionClick","onChange","selectSpecificUser","checked","isSelected","type","email","nat","registered","isExpanded","UpOutlined","className","DownOutlined","colSpan","src","picture","large","alt","name","first","last","toUpperCase","Table","responsive","location","street","phone","dob","defaultProps","UserInformation","userData","useState","users","setUsers","updatedUsers","Object","assign","forEach","element","striped","length","isChecked","selectAllUsers","map","id","Loading","Spinner","animation","role","NoDataAvailable","image","imageStyle","height","description","ErrorPage","subTitle","App","isLoading","setIsLoading","hasError","setIsError","setUserData","useEffect","res","results","catch","err","console","log","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47384ceb.chunk.js","sourcesContent":["import { BASE_URL } from \"./config\";\n\nconst UserService = {\n  async getUsers() {\n    try {\n      return fetch(BASE_URL + \"1.1/?results=15\",{\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        referrerPolicy: 'no-referrer'}).then((response) => {\n          const contentType = response.headers.get('content-type');\n          if (!contentType || !contentType.includes('application/json')) {\n            throw new TypeError(\"Oops, we haven't got JSON!\");\n          }\n          return response.json();\n        }\n      );\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default UserService;\n","import styled from 'styled-components';\n\n\nexport const UserInformationContainer = styled.div`\n    {\n    margin: auto;\n    max-width: 960px;\n    \n    .table-container  {\n        margin: 10px;\n        padding: 0;\n        border: 1px solid $gainsboro;\n        border-radius: 5px;\n        thead {\n          tr {\n            th {\n              border-bottom-color: $pastel !important;\n              font-size: small;\n            }\n          }\n        }\n        tbody {\n          tr {\n            &:nth-child(odd) {\n              --bs-table-accent-bg: $isabelle !important;\n              background-color: $isabelle !important;\n            }\n          }\n        }\n      }\n    }`;","// get our fontawesome imports\nimport { DownOutlined, UpOutlined } from \"@ant-design/icons\";\nimport Table from \"react-bootstrap/Table\";\nimport PropTypes from \"prop-types\";\nimport \"../style.scss\";\n\nconst UserDetails = (props) => {\n  const { user, index } = props;\n\n\n  // function is called whenever a row is clicked\n  const handleRowExpansionClick = (e) => {\n    let event = e.target.nodeName;\n    //check whether user has clicked on the checkbox field or not\n    if (event === \"INPUT\") {\n      return;\n    }\n    const { index, toggleExpander } = props;\n    toggleExpander(index);\n  };\n\n  /*function is called whenever a particular checkbox against a user\n  is clicked or unclicked */\n  const selectUser = () => {\n    const { index, selectSpecificUser } = props;\n    selectSpecificUser(index);\n  };\n\n  return [\n    <tr key={index} onClick={(e) => handleRowExpansionClick(e)}>\n      <td>\n        <input\n          onChange={selectUser}\n          checked={user?.isSelected ? user.isSelected : false}\n          type=\"checkbox\"\n        />\n      </td>\n      <td>{user.email}</td>\n      <td>{user.nat}</td>\n      <td>{user.registered}</td>\n      <td>\n        {!user.isExpanded ? (\n          <DownOutlined className=\"icon\" />\n        ) : (\n          <UpOutlined className=\"icon\" />\n        )}\n      </td>\n    </tr>,\n    user.isExpanded && (\n      <tr className=\"expandable\" key=\"tr-expander\">\n        <td colSpan={6}>\n          <div>\n            <div className=\"mainUser\">\n              <div className=\"username\">\n                <img\n                  className=\"image-profile\"\n                  src={user.picture.large}\n                  alt=\"avatar\"\n                />\n              </div>\n              <div className=\"userBasicInfo\">\n                <h4>\n                  {(user.name.first + \" \" + user.name.last).toUpperCase()}\n                </h4>\n                <h6>\n                  {(user.name.first + \" \" + user.name.last).toUpperCase()}\n                </h6>\n              </div>\n            </div>\n            <div className=\"userDetails\">\n              <p>USER DETAILS</p>\n              <Table responsive=\"sm\">\n                <tbody>\n                  <tr>\n                    <td>Address</td>\n                    <td>{user.location.street}</td>\n                  </tr>\n                  <tr>\n                    <td>E-mail</td>\n                    <td>{user.email}</td>\n                  </tr>\n                  <tr>\n                    <td>Phone</td>\n                    <td>{user.phone}</td>\n                  </tr>\n                  <tr>\n                    <td>Date of Birth</td>\n                    <td>{user.dob}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </td>\n      </tr>\n    ),\n  ];\n};\n\nUserDetails.propTypes = {\n  toggleExpander: PropTypes.func,\n  selectSpecificUser: PropTypes.func,\n  index: PropTypes.number,\n  user: PropTypes.object,\n};\n\nUserDetails.defaultProps = {\n  toggleExpander: null,\n  selectSpecificUser: null,\n  index: 0,\n  user: null,\n};\n\nexport default UserDetails;\n","import Table from \"react-bootstrap/Table\";\nimport { UserInformationContainer } from \"./style\";\nimport { useState } from \"react\";\nimport UserDetails from \"../UserDetails/UserDetails\";\nimport PropTypes from \"prop-types\";\nconst UserInformation = (props) => {\n  const { userData } = props;\n  const [users, setUsers] = useState(userData);\n\n  //Updates the value of a row (isExpanded) which was selected\n  const toggleExpander = (index) => {\n    let updatedUsers = Object.assign([{}], users);\n    /* save the new value of row which will be implemented\n    either to expand or collapse\n    */\n    let isExpanded = !updatedUsers[index].isExpanded;\n\n    // close any other row if previously opened\n    updatedUsers.forEach(function (element, index) {\n      element.isExpanded = false;\n    });\n    //update the value of the selected row\n    updatedUsers[index].isExpanded = isExpanded;\n    setUsers(updatedUsers);\n  };\n\n  /*\n  function gets triggered when clicked on the main checkbox\n  (located with the headers) and selects or unselects all\n   rows based on selection\n  */\n  const selectAllUsers = (e) => {\n    let isChecked = e.target.checked;\n    let updatedUsers = Object.assign([{}], users);\n    if (isChecked) {\n      updatedUsers.forEach(function (element) {\n        element.isSelected = true;\n      });\n    } else {\n      updatedUsers.forEach(function (element) {\n        element.isSelected = false;\n      });\n    }\n    setUsers(updatedUsers);\n  };\n\n  /* \n  Updates the isSelected value of a particular row whenever its\n  correspoding checkbox is clicked or unclicked\n  */\n  const selectSpecificUser = (index) => {\n    let updatedUsers = Object.assign([{}], users);\n    updatedUsers[index].isSelected = !updatedUsers[index].isSelected;\n    setUsers(updatedUsers);\n  };\n\n  return (\n    <UserInformationContainer>\n      <Table className=\"table-container\" responsive=\"md\" striped>\n        <thead>\n          <tr>\n            <th>\n              {users.length > 0 && (\n                <input onChange={(e) => selectAllUsers(e)} type=\"checkbox\" />\n              )}\n            </th>\n            <th>USER</th>\n            <th>GROUP</th>\n            <th>LAST ACTIVE</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => (\n            //    Custom Component\n            <UserDetails\n              key={user.id}\n              toggleExpander={toggleExpander}\n              selectSpecificUser={selectSpecificUser}\n              index={index}\n              user={user}\n            ></UserDetails>\n          ))}\n        </tbody>\n      </Table>\n    </UserInformationContainer>\n  );\n};\n\nUserInformation.propTypes = {\n  userData: PropTypes.arrayOf(PropTypes.object),\n};\n\nUserInformation.defaultProps = {\n  userData: [],\n};\n\nexport default UserInformation;\n","import Spinner from 'react-bootstrap/Spinner';\nimport \"./style.scss\";\n\nconst Loading = props => {\nreturn (\n    <div className=\"Loader\">\n    <Spinner className=\"spinner-border\" animation=\"border\" role=\"status\">\n  <span className=\"visually-hidden\">Loading...</span>\n</Spinner>\n</div>\n);\n\n}\n\nexport default Loading;","import \"./style.scss\";\nimport { Empty } from \"antd\";\n\nconst NoDataAvailable = (props) => {\n  return (\n    <Empty\n      image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n      imageStyle={{\n        height: 60,\n      }}\n      description={<span>No Data Found</span>}\n    ></Empty>\n  );\n};\n\nexport default NoDataAvailable;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Result } from \"antd\";\n\n\nconst ErrorPage = (props) => {\n    return (\n  <Result subTitle=\"Sorry, something went wrong.\" />\n  );\n};\n\nexport default ErrorPage;\n","import \"./App.scss\";\nimport { useEffect, useState } from \"react\";\nimport UserService from \"../src/services/UserServices\";\nimport UserInformation from \"./containers/UserInformation/UserInformation\";\nimport Loading from \"./common/components/Loading/Loading\";\nimport NoDataAvailable from \"./common/components/NoDataAvailable/NoDataAvailable\";\nimport ErrorPage from \"./common/components/ErrorPage/ErrorPage\";\n\n//Main Component\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setIsError] = useState(false);\n  const [userData, setUserData] = useState([]);\n\n  useEffect(() => {\n      UserService.getUsers()\n        .then((res) => {\n          res.results.forEach(function (element, index) {\n            element.isExpanded = false;\n            element.isSelected = false;\n            element.id = index+1;\n          });\n          setIsLoading(false);\n          setUserData(res.results);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setIsError(true);\n          console.log(\"Error: \", err);\n        });\n  }, []);\n\n  let content = <Loading></Loading>;\n\n  if(isLoading) {\n     // Loader Component;\n    content = <Loading></Loading>;\n  }\n  if(!isLoading && hasError) {\n    // If error is thrown from the API;\n   content = <ErrorPage></ErrorPage>;\n  }\n  if(!isLoading && !hasError && userData.length === 0) {\n     // If no data is returned from the API;\n    content = <NoDataAvailable></NoDataAvailable> \n  }\n  \n  if(!isLoading && !hasError && userData.length > 0) {\n    // Custom Component having userData as a props\n    content = <UserInformation userData={userData}></UserInformation>   \n  }\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}